{"pageProps":{"note":{"id":"6qkeo055xhvi09f68l050au","title":"Binary Search Tree","desc":"","updated":1648057448310,"created":1648057448310,"custom":{},"fname":"ser222.binary-search-tree","type":"note","vault":{"fsPath":"vault"},"contentHash":"fa0f9e6b1ef67699484a3378c77028b0","links":[{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.binary-tree","alias":"binary trees","position":{"start":{"line":4,"column":10,"offset":32},"end":{"line":4,"column":45,"offset":67},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.binary-tree"}},{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.heap","alias":"heaps","position":{"start":{"line":4,"column":50,"offset":72},"end":{"line":4,"column":71,"offset":93},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.heap"}},{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.binary-tree","alias":"binary tree","position":{"start":{"line":9,"column":5,"offset":206},"end":{"line":9,"column":39,"offset":240},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.binary-tree"}},{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.symbol-table","alias":"ser222.symbol-table","position":{"start":{"line":69,"column":9,"offset":1722},"end":{"line":69,"column":32,"offset":1745},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.symbol-table"}},{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.symbol-table","alias":"get","position":{"start":{"line":69,"column":33,"offset":1746},"end":{"line":69,"column":85,"offset":1798},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.symbol-table","anchorHeader":"Get value implementation"}},{"type":"wiki","from":{"fname":"ser222.binary-search-tree","id":"6qkeo055xhvi09f68l050au","vaultName":"vault"},"value":"ser222.symbol-table","alias":"put","position":{"start":{"line":69,"column":90,"offset":1803},"end":{"line":69,"column":142,"offset":1855},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.symbol-table","anchorHeader":"Put value implementation"}},{"from":{"fname":"ser222","vaultName":"vault"},"type":"backlink","position":{"start":{"line":54,"column":3,"offset":3571},"end":{"line":54,"column":60,"offset":3628},"indent":[]},"value":"ser222.binary-search-tree","alias":"Notes - Binary Search Trees"},{"from":{"fname":"ser222.symbol-table","vaultName":"vault"},"type":"backlink","position":{"start":{"line":113,"column":14,"offset":3225},"end":{"line":113,"column":43,"offset":3254},"indent":[]},"value":"ser222.binary-search-tree","alias":"ser222.binary-search-tree"}],"anchors":{"compared-to-heaps":{"type":"header","text":"Compared to heaps","value":"compared-to-heaps","line":8,"column":0,"depth":2},"concept":{"type":"header","text":"Concept","value":"concept","line":13,"column":0,"depth":2},"recursive-definition":{"type":"header","text":"Recursive definition","value":"recursive-definition","line":19,"column":0,"depth":3},"traversing":{"type":"header","text":"Traversing","value":"traversing","line":24,"column":0,"depth":2},"pre-order-traversal":{"type":"header","text":"Pre-order traversal","value":"pre-order-traversal","line":28,"column":0,"depth":3},"in-order-traversal":{"type":"header","text":"In-order traversal","value":"in-order-traversal","line":43,"column":0,"depth":3},"post-order-traversal":{"type":"header","text":"Post-order traversal","value":"post-order-traversal","line":58,"column":0,"depth":3},"inserting":{"type":"header","text":"Inserting","value":"inserting","line":73,"column":0,"depth":2},"layout":{"type":"header","text":"Layout","value":"layout","line":77,"column":0,"depth":2}},"children":[],"parent":"TzkCyXooADlBmPWjKo0ds","data":{}},"body":"<h1 id=\"binary-search-tree\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#binary-search-tree\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Binary Search Tree</h1>\n<h2 id=\"compared-to-heaps\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#compared-to-heaps\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Compared to heaps</h2>\n<ul>\n<li>Unlike <a href=\"/notes/notes/pswkhuweiczpfii3orp1cji\">binary trees</a> and <a href=\"/notes/notes/n8v9ra9di5cmdpq870z0vrp\">heaps</a>, binary search trees <em>must</em> bee complete</li>\n<li>Binary search trees are more restrictive than heaps</li>\n</ul>\n<h2 id=\"concept\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concept\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concept</h2>\n<ul>\n<li>A <a href=\"/notes/notes/pswkhuweiczpfii3orp1cji\">binary tree</a> is a tree where each node has at most two children</li>\n<li>A binary <em>search</em> tree is a binary tree where each node's left child has a key that is less than the parent, and the right child has a key that is greater than the parent</li>\n<li><img src=\"/notes/assets/images/2022-03-23-10-48-39.png\"></li>\n</ul>\n<h3 id=\"recursive-definition\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#recursive-definition\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Recursive definition</h3>\n<ul>\n<li>A node is the root of a binary search tree if...\n<ul>\n<li>The left child has a key less than the parent, and the child is the root of a binary search tree</li>\n<li>The right child has a key greater than the parent, and the child is the root of a binary search tree</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"traversing\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#traversing\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Traversing</h2>\n<p>The three main algorithms for traversing a binary search tree are...</p>\n<h3 id=\"pre-order-traversal\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pre-order-traversal\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pre-order traversal</h3>\n<ol>\n<li>Visit the root node</li>\n<li>Traverse the left subtree</li>\n<li>Traverse the right subtree</li>\n</ol>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">preOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"in-order-traversal\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#in-order-traversal\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>In-order traversal</h3>\n<ol>\n<li>Traverse the left subtree</li>\n<li>Visit the root node</li>\n<li>Traverse the right subtree</li>\n</ol>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">inOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"post-order-traversal\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#post-order-traversal\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Post-order traversal</h3>\n<ol>\n<li>Traverse the left subtree</li>\n<li>Traverse the right subtree</li>\n<li>Visit the root node</li>\n</ol>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> root<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">postOrder</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"inserting\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#inserting\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Inserting</h2>\n<p>See the <a href=\"/notes/notes/mrx0bcj62vm5hh8iv7udpnd\">Symbol Table (Map)</a> <a href=\"/notes/notes/mrx0bcj62vm5hh8iv7udpnd#Get value implementation\">get</a> and <a href=\"/notes/notes/mrx0bcj62vm5hh8iv7udpnd#Put value implementation\">put</a> for more details.</p>\n<h2 id=\"layout\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#layout\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Layout</h2>\n<ul>\n<li>Three cases for tree layout\n<ul>\n<li>Worst case\n<ul>\n<li>The tree is completely unbalanced</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span> search time</li>\n<li><img src=\"/notes/assets/images/2022-03-23-11-19-46.png\"></li>\n</ul>\n</li>\n<li>Typical case\n<ul>\n<li>Somewhat balanced</li>\n<li><img src=\"/notes/assets/images/2022-03-23-11-20-25.png\"></li>\n</ul>\n</li>\n<li>Best case\n<ul>\n<li>Perfectly balanced, as all things should be</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\log n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span> search time\n<img src=\"/notes/assets/images/2022-03-23-11-20-57.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/TzkCyXooADlBmPWjKo0ds\">SER-222</a></li>\n<li><a href=\"/notes/notes/mrx0bcj62vm5hh8iv7udpnd\">Symbol Table (Map)</a></li>\n</ul>","noteIndex":{"id":"6YxiIDvTOeKoHyAaqqzY9","title":"Notes","desc":"","updated":1655764869385,"created":1641245237998,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fc07e211d902512814feeef3187746c9","links":[{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"typescript","alias":"typescript","position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":17,"offset":36},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"typescript"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"luau","alias":"luau","position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":11,"offset":47},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"luau"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser222","alias":"SER 222 - Data Structures & Algorithms","position":{"start":{"line":9,"column":3,"offset":67},"end":{"line":9,"column":52,"offset":116},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser216","alias":"SER 216 - \"Software Enterprise\" aka Intro to Software Design","position":{"start":{"line":10,"column":3,"offset":119},"end":{"line":10,"column":74,"offset":190},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser216"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"mat266","alias":"MAT 266 - Calc For Engineers II","position":{"start":{"line":11,"column":3,"offset":193},"end":{"line":11,"column":45,"offset":235},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"mat266"}}],"anchors":{"personal-notes":{"type":"header","text":"Personal Notes","value":"personal-notes","line":8,"column":0,"depth":2},"spring-2022":{"type":"header","text":"Spring 2022","value":"spring-2022","line":13,"column":0,"depth":2}},"children":["fuqi18m0n2cda123o2f3003","cCj8dvgLOLu6CEaNoWdD6","T2ptecH0AHZvseJr1aUvN","TzkCyXooADlBmPWjKo0ds","jwgm1vmw3r5kati1c6uw5pr"],"parent":null,"data":{},"body":"\n## Personal Notes\n\n- [[typescript]]\n- [[luau]]\n\n## Spring 2022\n\n- [[SER 222 - Data Structures & Algorithms|ser222]]\n- [[SER 216 - \"Software Enterprise\" aka Intro to Software Design|ser216]]\n- [[MAT 266 - Calc For Engineers II|mat266]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"James' Class Notes","description":"Fun SWE Stuffs","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteUrl":"https://jheinem1.github.io/notes","assetsPrefix":"/notes","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"enableSmartRefs":true,"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}