{"pageProps":{"note":{"id":"e5jec1f6w7q2m03fu06zld4","title":"Design","desc":"","updated":1647456254516,"created":1647455354123,"custom":{},"fname":"ser222.algorithms.adj.design","type":"note","vault":{"fsPath":"vault"},"contentHash":"0988602b9a36a54f7a090a429d20d341","links":[{"type":"wiki","from":{"fname":"ser222.algorithms.adj.design","id":"e5jec1f6w7q2m03fu06zld4","vaultName":"vault"},"value":"ser222.algorithms.adj.analysis","alias":"Definitions","position":{"start":{"line":45,"column":13,"offset":1310},"end":{"line":45,"column":71,"offset":1368},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.algorithms.adj.analysis","anchorHeader":"Definitions"}},{"type":"wiki","from":{"fname":"ser222.algorithms.adj.design","id":"e5jec1f6w7q2m03fu06zld4","vaultName":"vault"},"value":"ser222.algorithms.adj.problem-statement","alias":"problem","position":{"start":{"line":49,"column":43,"offset":1430},"end":{"line":49,"column":94,"offset":1481},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.algorithms.adj.problem-statement"}},{"from":{"fname":"ser222.algorithms.adj","vaultName":"vault"},"type":"backlink","position":{"start":{"line":2,"column":190,"offset":190},"end":{"line":2,"column":229,"offset":229},"indent":[]},"value":"ser222.algorithms.adj.design","alias":"design"},{"from":{"fname":"ser222.algorithms.adj","vaultName":"vault"},"type":"backlink","position":{"start":{"line":10,"column":3,"offset":676},"end":{"line":10,"column":42,"offset":715},"indent":[]},"value":"ser222.algorithms.adj.design","alias":"Design"}],"anchors":{"pseudocode":{"type":"header","text":"Pseudocode","value":"pseudocode","line":8,"column":0,"depth":2},"examples":{"type":"header","text":"Examples","value":"examples","line":15,"column":0,"depth":3},"k":{"type":"header","text":"K","value":"k","line":45,"column":0,"depth":2},"decomposition":{"type":"header","text":"Decomposition","value":"decomposition","line":53,"column":0,"depth":2}},"children":[],"parent":"cbwqvn7mgvc262hvxs5m3r6","data":{}},"body":"<h1 id=\"design\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#design\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Design</h1>\n<h2 id=\"pseudocode\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pseudocode\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pseudocode</h2>\n<ul>\n<li>The purpose of pseudocode is to <strong>clearly</strong> express an algorithm\n<ul>\n<li>There cannot be ambiguity</li>\n</ul>\n</li>\n<li>Pseudocode cannot be used to hide important details\n<ul>\n<li>It's only fair to reference an undefined function when it does not add more ambiguity, e.g. calling <code>distance(x1, y1, x2, y2)</code> is fine, but calling <code>has_deviation(original_image, new_image)</code> is not</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"examples\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#examples\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Examples</h3>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Key</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    pq<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">less</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">exch</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        k <span class=\"token operator\">=</span> k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Key</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pq<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">less</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">exch</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        k <span class=\"token operator\">=</span> k <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Pseudocode does not need to compile, however it is helpful to use a specific language's syntax to make it easier to read. Python is often used because it closely resembles plain English and generally produces relatively readable and concise code.</p>\n<h2 id=\"k\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#k\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>K</h2>\n<ul>\n<li>\"K\" stands for knowledge and is the symbol we will use to refer to the set of information which is known to be true\n<ul>\n<li>In a class, \"K\" is typically provided as a working document</li>\n</ul>\n</li>\n<li>The purpose of \"K\" is to ensure a design is well-founded</li>\n<li>\"K\" can serve as a safe place to put generic definitions\n<ul>\n<li>\"K\" = <a href=\"/notes/notes/ck1jy0xrmrn7rioctj6uwal#Definitions\">Definitions</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"decomposition\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#decomposition\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Decomposition</h2>\n<p>Since we have a good understanding of the <a href=\"/notes/notes/qfa4p6mo2v96lr97z53vosk\">problem</a>, we can attempt to break it into steps (and pseudocode).</p>\n<ol>\n<li>Find target key/value</li>\n<li>If needed, adjust position of target key/value</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> Value<span class=\"token punctuation\">,</span> new_priority<span class=\"token punctuation\">:</span> Key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    idx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">None</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    \n    <span class=\"token comment\"># Step 1: Find target key/value</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> value<span class=\"token punctuation\">:</span>\n            idx <span class=\"token operator\">=</span> i\n            <span class=\"token keyword\">break</span>\n    \n    <span class=\"token keyword\">if</span> idx <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token comment\"># Step 2: Adjust position of target key/value</span>\n    keys<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_priority\n    <span class=\"token keyword\">if</span> less<span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">[</span>idx <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> new_priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        swim<span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> less<span class=\"token punctuation\">(</span>new_priority<span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sink<span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/cbwqvn7mgvc262hvxs5m3r6\">ADJ for Algorithms</a></li>\n</ul>","noteIndex":{"id":"6YxiIDvTOeKoHyAaqqzY9","title":"Notes","desc":"","updated":1655764869385,"created":1641245237998,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fc07e211d902512814feeef3187746c9","links":[{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"typescript","alias":"typescript","position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":17,"offset":36},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"typescript"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"luau","alias":"luau","position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":11,"offset":47},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"luau"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser222","alias":"SER 222 - Data Structures & Algorithms","position":{"start":{"line":9,"column":3,"offset":67},"end":{"line":9,"column":52,"offset":116},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser216","alias":"SER 216 - \"Software Enterprise\" aka Intro to Software Design","position":{"start":{"line":10,"column":3,"offset":119},"end":{"line":10,"column":74,"offset":190},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser216"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"mat266","alias":"MAT 266 - Calc For Engineers II","position":{"start":{"line":11,"column":3,"offset":193},"end":{"line":11,"column":45,"offset":235},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"mat266"}}],"anchors":{"personal-notes":{"type":"header","text":"Personal Notes","value":"personal-notes","line":8,"column":0,"depth":2},"spring-2022":{"type":"header","text":"Spring 2022","value":"spring-2022","line":13,"column":0,"depth":2}},"children":["fuqi18m0n2cda123o2f3003","cCj8dvgLOLu6CEaNoWdD6","T2ptecH0AHZvseJr1aUvN","TzkCyXooADlBmPWjKo0ds","jwgm1vmw3r5kati1c6uw5pr"],"parent":null,"data":{},"body":"\n## Personal Notes\n\n- [[typescript]]\n- [[luau]]\n\n## Spring 2022\n\n- [[SER 222 - Data Structures & Algorithms|ser222]]\n- [[SER 216 - \"Software Enterprise\" aka Intro to Software Design|ser216]]\n- [[MAT 266 - Calc For Engineers II|mat266]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"James' Class Notes","description":"Fun SWE Stuffs","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteUrl":"https://jheinem1.github.io/notes","assetsPrefix":"/notes","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"enableSmartRefs":true,"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}