{"pageProps":{"note":{"id":"nlz99ynh260sv3sifyst862","title":"Event Driven Programming","desc":"","updated":1648586142233,"created":1648586142233,"custom":{},"fname":"ser216.event-driven-programming","type":"note","vault":{"fsPath":"vault"},"contentHash":"d95b8b34990dfa8c638ae563ceb7e591","links":[{"from":{"fname":"ser216","vaultName":"vault"},"type":"backlink","position":{"start":{"line":114,"column":5,"offset":4391},"end":{"line":114,"column":46,"offset":4432},"indent":[]},"value":"ser216.event-driven-programming","alias":"Notes"},{"from":{"fname":"ser216","vaultName":"vault"},"type":"backlink","position":{"start":{"line":118,"column":5,"offset":4646},"end":{"line":118,"column":46,"offset":4687},"indent":[]},"value":"ser216.event-driven-programming","alias":"Notes"}],"anchors":{"procedural-vs-event-driven-programming":{"type":"header","text":"Procedural vs event-driven programming","value":"procedural-vs-event-driven-programming","line":8,"column":0,"depth":2},"gui-events":{"type":"header","text":"GUI events","value":"gui-events","line":15,"column":0,"depth":2},"example-of-java-event-handling":{"type":"header","text":"Example of java event handling","value":"example-of-java-event-handling","line":29,"column":0,"depth":2},"events":{"type":"header","text":"Events","value":"events","line":59,"column":0,"depth":2},"event-classes":{"type":"header","text":"Event classes","value":"event-classes","line":64,"column":0,"depth":2},"common-events":{"type":"header","text":"Common events","value":"common-events","line":85,"column":0,"depth":2},"the-delegation-model":{"type":"header","text":"The delegation model","value":"the-delegation-model","line":89,"column":0,"depth":2},"inner-class-listeners":{"type":"header","text":"Inner class listeners","value":"inner-class-listeners","line":97,"column":0,"depth":2},"inner-classes":{"type":"header","text":"Inner classes","value":"inner-classes","line":104,"column":0,"depth":2},"anonymous-inner-classes":{"type":"header","text":"Anonymous inner classes","value":"anonymous-inner-classes","line":109,"column":0,"depth":2},"lambda-expressions":{"type":"header","text":"Lambda expressions","value":"lambda-expressions","line":118,"column":0,"depth":2}},"children":[],"parent":"T2ptecH0AHZvseJr1aUvN","data":{}},"body":"<h1 id=\"event-driven-programming\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#event-driven-programming\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Event Driven Programming</h1>\n<h2 id=\"procedural-vs-event-driven-programming\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#procedural-vs-event-driven-programming\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Procedural vs event-driven programming</h2>\n<ul>\n<li>Procedural code is executed in procedural order- by line\n<ul>\n<li>This is ideal for code that does not need to wait for other code to finish</li>\n</ul>\n</li>\n<li><em>Event-driven</em> code is executed when an event occurs\n<ul>\n<li>This is ideal for handling user input and other events that may occur at any time</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"gui-events\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#gui-events\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>GUI events</h2>\n<ul>\n<li>Source object (e.g. button)</li>\n<li>Event object (e.g. mouse click)</li>\n<li>Listener/handler object\n<ul>\n<li>Contains a method for processing the event</li>\n<li>In languages that support functional programming, this can just be a private function or lambda expression</li>\n</ul>\n</li>\n</ul>\n<div class=\"mermaid\">\n  flowchart LR\n    button[Button\\n\\nClicking a button fires an action event] --> event[Event\\n\\nAn event is an object]\n    event --> handler[Handler\\n\\nThe event handler proecesses the event]\n</div>\n<h2 id=\"example-of-java-event-handling\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example-of-java-event-handling\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example of java event handling</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HandleEvent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Stage</span> primaryStage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// \"okButton\" is a button object</span>\n        <span class=\"token comment\">// \"cancelButton\" is a button object</span>\n        <span class=\"token class-name\">OKHandlerClass</span> handler1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OKHandlerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        okButton<span class=\"token punctuation\">.</span><span class=\"token function\">setOnAction</span><span class=\"token punctuation\">(</span>handler1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CancelHandlerClass</span> handler2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CancelHandlerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cancelButton<span class=\"token punctuation\">.</span><span class=\"token function\">setOnAction</span><span class=\"token punctuation\">(</span>handler2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        primaryStage<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OKHandlerClass</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EventHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">ActionEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// will be called when the \"okButton\" is clicked</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CancelHandlerClass</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EventHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">ActionEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// will be called when the \"cancelButton\" is clicked</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"events\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#events\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Events</h2>\n<ul>\n<li>An event is a type of signal to the program that something has happened</li>\n<li>An event is often generated by external entities (e.g. a user or another program)</li>\n</ul>\n<h2 id=\"event-classes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#event-classes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Event classes</h2>\n<div class=\"mermaid\">\n  classDiagram\n    MouseEvent --> InputEvent\n    KeyEvent --> InputEvent\n\n    ActionEvent --> Event\n    InputEvent --> Event\n    WindowEvent --> Event\n\n    Event --> EventObject\n</div>\n<p>These classes are found in the JavaFX event package. Subclasses of <code>EventObject</code> deal with events such as...</p>\n<ul>\n<li>Button actions</li>\n<li>Window events</li>\n<li>Mouse movements</li>\n<li>Keystrokes</li>\n</ul>\n<h2 id=\"common-events\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#common-events\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Common events</h2>\n<p><img src=\"/notes/assets/images/2022-03-29-14-03-22.png\"></p>\n<h2 id=\"the-delegation-model\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#the-delegation-model\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>The delegation model</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">var</span> okButton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OKHandlerClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nokButton<span class=\"token punctuation\">.</span><span class=\"token function\">setOnAction</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"inner-class-listeners\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#inner-class-listeners\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Inner class listeners</h2>\n<ul>\n<li>A listener class is designed to create a listener object for a specific event</li>\n<li>Because the listener class is only designed for a specific event, it is not reusable</li>\n<li>This makes it ideal to use a private or inner class to handle the event</li>\n<li>Because the listener class will only be used for one event, it can also be declared as a static class to avoid the need to instantiate it</li>\n</ul>\n<h2 id=\"inner-classes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#inner-classes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Inner classes</h2>\n<ul>\n<li>An inner class is a class inside another class</li>\n<li>This can make programs simple and allowing access to the internal state of the classes, eliminating the need to pass the parent class as a parameter</li>\n</ul>\n<h2 id=\"anonymous-inner-classes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#anonymous-inner-classes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Anonymous inner classes</h2>\n<ul>\n<li>Must always extend a superclass or implement an interface</li>\n<li>Cannot have an explicit 'extends' or 'implements' clause</li>\n<li>Must implement all abstract methods of the superclass</li>\n<li>Always uses the no-arg constructor from its superclass to create an instance</li>\n<li>Compiled as <code>OuterClassName$n.class</code> (where <code>n</code> is a number)</li>\n<li><img src=\"/notes/assets/images/2022-04-02-15-34-02.png\"></li>\n</ul>\n<h2 id=\"lambda-expressions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#lambda-expressions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Lambda expressions</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2022-04-02-15-35-18.png\"></li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/T2ptecH0AHZvseJr1aUvN\">SER-216</a></li>\n</ul>","noteIndex":{"id":"6YxiIDvTOeKoHyAaqqzY9","title":"Notes","desc":"","updated":1655764869385,"created":1641245237998,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fc07e211d902512814feeef3187746c9","links":[{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"typescript","alias":"typescript","position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":17,"offset":36},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"typescript"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"luau","alias":"luau","position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":11,"offset":47},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"luau"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser222","alias":"SER 222 - Data Structures & Algorithms","position":{"start":{"line":9,"column":3,"offset":67},"end":{"line":9,"column":52,"offset":116},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser216","alias":"SER 216 - \"Software Enterprise\" aka Intro to Software Design","position":{"start":{"line":10,"column":3,"offset":119},"end":{"line":10,"column":74,"offset":190},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser216"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"mat266","alias":"MAT 266 - Calc For Engineers II","position":{"start":{"line":11,"column":3,"offset":193},"end":{"line":11,"column":45,"offset":235},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"mat266"}}],"anchors":{"personal-notes":{"type":"header","text":"Personal Notes","value":"personal-notes","line":8,"column":0,"depth":2},"spring-2022":{"type":"header","text":"Spring 2022","value":"spring-2022","line":13,"column":0,"depth":2}},"children":["fuqi18m0n2cda123o2f3003","cCj8dvgLOLu6CEaNoWdD6","T2ptecH0AHZvseJr1aUvN","TzkCyXooADlBmPWjKo0ds","jwgm1vmw3r5kati1c6uw5pr"],"parent":null,"data":{},"body":"\n## Personal Notes\n\n- [[typescript]]\n- [[luau]]\n\n## Spring 2022\n\n- [[SER 222 - Data Structures & Algorithms|ser222]]\n- [[SER 216 - \"Software Enterprise\" aka Intro to Software Design|ser216]]\n- [[MAT 266 - Calc For Engineers II|mat266]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"James' Class Notes","description":"Fun SWE Stuffs","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteUrl":"https://jheinem1.github.io/notes","assetsPrefix":"/notes","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"enableSmartRefs":true,"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}