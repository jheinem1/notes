{"pageProps":{"note":{"id":"H4F7XnqFDxFSpMKPmz29Q","title":"Sorting","desc":"","updated":1646072798160,"created":1645033612706,"custom":{},"fname":"ser222.sorting","type":"note","vault":{"fsPath":"vault"},"contentHash":"ca91a234f952bd6f39b0156905140a46","links":[{"type":"wiki","from":{"fname":"ser222.sorting","id":"H4F7XnqFDxFSpMKPmz29Q","vaultName":"vault"},"value":"ser222.sorting.comparable","alias":"ser222.sorting.comparable","position":{"start":{"line":65,"column":9,"offset":2670},"end":{"line":65,"column":38,"offset":2699},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.sorting.comparable"}},{"from":{"fname":"ser222","vaultName":"vault"},"type":"backlink","position":{"start":{"line":40,"column":3,"offset":2831},"end":{"line":40,"column":27,"offset":2855},"indent":[]},"value":"ser222.sorting","alias":"Notes"},{"from":{"fname":"ser222.sorting.merge-sort","vaultName":"vault"},"type":"backlink","position":{"start":{"line":129,"column":7,"offset":3549},"end":{"line":129,"column":40,"offset":3582},"indent":[]},"value":"ser222.sorting","alias":"ser222.sorting"}],"anchors":{},"children":["rJY9kuRQAJWNADEdqvjEy","4lAoFXxrw5JrqccPx4mdn","HuLi3tsSPF29U9dwn8Tml","iwVAJyCH4RCIjwzhj9WT1","zvzpumsq3jiyu593dxba2xx","rm3v8zh3u4s8ccf2tdk0grn","OxDICIC47AphBFA6bVg0w","Llhr6wIMEJybJ4f1ncfwG","Pfo8sJfBLWOwDG1g7FK1d"],"parent":"TzkCyXooADlBmPWjKo0ds","data":{}},"body":"<h1 id=\"sorting\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sorting\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sorting</h1>\n<hr>\n<h2 id=\"foundations\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#foundations\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Foundations</h2>\n<h3 id=\"applications\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#applications\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Applications</h3>\n<ul>\n<li>Sorting is useful for...\n<ul>\n<li>Ordering string alphanumerically</li>\n<li>Ordering objects on a screen</li>\n<li>Ordering executing processes</li>\n</ul>\n</li>\n<li>Sorting provides...\n<ul>\n<li>Structure</li>\n<li>A decomposition of a list of values</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"how-data-is-sorted\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#how-data-is-sorted\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>How data is sorted</h3>\n<ul>\n<li>Data may be simple numbers or complex strings</li>\n<li>Data is always sorted by a <em>key</em>- some subset of data that is sufficient to define an order</li>\n</ul>\n<h3 id=\"approaches\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#approaches\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Approaches</h3>\n<ul>\n<li>There are many algorithms to sort: <a href=\"/notes/notes/iwVAJyCH4RCIjwzhj9WT1\">insertion sort</a>, <a href=\"/notes/notes/Llhr6wIMEJybJ4f1ncfwG\">selection sort</a>, <a href=\"/notes/notes/zvzpumsq3jiyu593dxba2xx\">merge sort</a>, <a title=\"Private\" style=\"color: brown\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\">quick sort (Private)</a>, <a href=\"/notes/notes/Pfo8sJfBLWOwDG1g7FK1d\">shell sort</a>, <a href=\"/notes/notes/OxDICIC47AphBFA6bVg0w\">radix sort</a>, <a href=\"/notes/notes/HuLi3tsSPF29U9dwn8Tml\">counting sort</a>, <a href=\"/notes/notes/rJY9kuRQAJWNADEdqvjEy\">bogo sort</a> and several dozen more.</li>\n<li>Sorting is not only a common problem but a classic area of algorithm analysis\n<ul>\n<li>It is easy to understand and can be approached in many ways</li>\n</ul>\n</li>\n<li>Some of these make different assumptions\n<ul>\n<li><a href=\"/notes/notes/OxDICIC47AphBFA6bVg0w\">Radix sort</a> requires integers</li>\n</ul>\n</li>\n<li>Many of these algorithms behave fundamentally different\n<ul>\n<li>This leads to differences in performance in either worst case (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span> vs <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n\\log{n})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span><span class=\"mclose\">)</span></span></span></span></span>) or best case (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Omega(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ω</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span> vs <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Omega(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ω</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sorted-data\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sorted-data\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sorted data</h3>\n<ul>\n<li>A list is sorted if all elements are in order: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>n</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo>&#x3C;</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\forall{n},a_n&#x3C;a_{n+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">∀</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></span>, where order is computed from a key</li>\n<li>A list is unsorted if an element is out of order: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi><mi>n</mi><mtext> </mtext><mi>s</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><msub><mi>a</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&#x3C;</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\exists{n}\\text{ }s.t.a_{n+1}&#x3C;a_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\">∃</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span><span class=\"mord text\"><span class=\"mord\"> </span></span><span class=\"mord mathnormal\">s</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n<li>A metric: <em>inversions</em>\n<ul>\n<li>\"An inversion is a pair of entries that are out of order in the array\"</li>\n<li><code>[3, 1, 8, 2]</code> has 3 inversions: <code>3-1</code>, <code>3-2</code>, <code>8-2</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"java-context\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#java-context\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Java context</h2>\n<p>Almost all sorting methods implement these methods:\n(<strong>NOTE</strong>: <code>-ea</code> to enable assertions)</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sort</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">less</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span> v<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Comparable</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">exch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Comparable</span> t <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isSorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">less</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li>Helper methods providing common functionality\n<ul>\n<li><code>less</code></li>\n<li><code>exch</code></li>\n</ul>\n</li>\n<li>Testing methods\n<ul>\n<li><code>isSorted</code></li>\n<li><code>show</code></li>\n</ul>\n</li>\n<li>Using <a href=\"/notes/notes/4lAoFXxrw5JrqccPx4mdn\">Comparable</a> to be as generic as possible</li>\n</ul>\n<h2 id=\"sorting-lower-bound\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sorting-lower-bound\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sorting lower bound</h2>\n<h3 id=\"decision-trees\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#decision-trees\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Decision trees</h3>\n<ul>\n<li>We can represent the decision process that finds a sorted number of elements with a binary tree of comparisons</li>\n</ul>\n<p><img src=\"/notes/assets/images/2022-02-28-11-25-03.png\"></p>\n<ul>\n<li>Using this decision tree, we can determine that any sorting algorithm needs at least <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Omega(n\\log{n})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ω</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span><span class=\"mclose\">)</span></span></span></span></span> comparisons</li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/notes/rJY9kuRQAJWNADEdqvjEy\">Bogo Sort</a></li>\n<li><a href=\"/notes/notes/4lAoFXxrw5JrqccPx4mdn\">Comparable</a></li>\n<li><a href=\"/notes/notes/HuLi3tsSPF29U9dwn8Tml\">Counting Sort</a></li>\n<li><a href=\"/notes/notes/iwVAJyCH4RCIjwzhj9WT1\">Insertion Sort</a></li>\n<li><a href=\"/notes/notes/zvzpumsq3jiyu593dxba2xx\">Merge Sort</a></li>\n<li><a href=\"/notes/notes/rm3v8zh3u4s8ccf2tdk0grn\">Priority Queue</a></li>\n<li><a href=\"/notes/notes/OxDICIC47AphBFA6bVg0w\">Radix Sort</a></li>\n<li><a href=\"/notes/notes/Llhr6wIMEJybJ4f1ncfwG\">Selection Sort</a></li>\n<li><a href=\"/notes/notes/Pfo8sJfBLWOwDG1g7FK1d\">Shell Sort</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/TzkCyXooADlBmPWjKo0ds\">SER-222</a></li>\n<li><a href=\"/notes/notes/zvzpumsq3jiyu593dxba2xx\">Merge Sort</a></li>\n</ul>","noteIndex":{"id":"6YxiIDvTOeKoHyAaqqzY9","title":"Notes","desc":"","updated":1655764869385,"created":1641245237998,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fc07e211d902512814feeef3187746c9","links":[{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"typescript","alias":"typescript","position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":17,"offset":36},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"typescript"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"luau","alias":"luau","position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":11,"offset":47},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"luau"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser222","alias":"SER 222 - Data Structures & Algorithms","position":{"start":{"line":9,"column":3,"offset":67},"end":{"line":9,"column":52,"offset":116},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser216","alias":"SER 216 - \"Software Enterprise\" aka Intro to Software Design","position":{"start":{"line":10,"column":3,"offset":119},"end":{"line":10,"column":74,"offset":190},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser216"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"mat266","alias":"MAT 266 - Calc For Engineers II","position":{"start":{"line":11,"column":3,"offset":193},"end":{"line":11,"column":45,"offset":235},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"mat266"}}],"anchors":{"personal-notes":{"type":"header","text":"Personal Notes","value":"personal-notes","line":8,"column":0,"depth":2},"spring-2022":{"type":"header","text":"Spring 2022","value":"spring-2022","line":13,"column":0,"depth":2}},"children":["fuqi18m0n2cda123o2f3003","cCj8dvgLOLu6CEaNoWdD6","T2ptecH0AHZvseJr1aUvN","TzkCyXooADlBmPWjKo0ds","jwgm1vmw3r5kati1c6uw5pr"],"parent":null,"data":{},"body":"\n## Personal Notes\n\n- [[typescript]]\n- [[luau]]\n\n## Spring 2022\n\n- [[SER 222 - Data Structures & Algorithms|ser222]]\n- [[SER 216 - \"Software Enterprise\" aka Intro to Software Design|ser216]]\n- [[MAT 266 - Calc For Engineers II|mat266]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"James' Class Notes","description":"Fun SWE Stuffs","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteUrl":"https://jheinem1.github.io/notes","assetsPrefix":"/notes","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"enableSmartRefs":true,"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}