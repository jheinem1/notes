{"pageProps":{"note":{"id":"uo2hl3yfhn58g5fuzj90q2r","title":"Directed Graphs","desc":"","updated":1650478834192,"created":1650475963818,"custom":{},"fname":"ser222.directed-graphs","type":"note","vault":{"fsPath":"vault"},"contentHash":"ef9d623c40a70fd6136c8d5adcc5d4dc","links":[{"type":"wiki","from":{"fname":"ser222.directed-graphs","id":"uo2hl3yfhn58g5fuzj90q2r","vaultName":"vault"},"value":"ser222.undirected-graphs","alias":"ser222.undirected-graphs","position":{"start":{"line":2,"column":15,"offset":15},"end":{"line":2,"column":43,"offset":43},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.undirected-graphs"}},{"type":"wiki","from":{"fname":"ser222.directed-graphs","id":"uo2hl3yfhn58g5fuzj90q2r","vaultName":"vault"},"value":"ser222.directed-graphs.problems.directed-search","alias":"ser222.directed-graphs.problems.directed-search","position":{"start":{"line":112,"column":3,"offset":3073},"end":{"line":112,"column":54,"offset":3124},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.directed-graphs.problems.directed-search"}},{"type":"wiki","from":{"fname":"ser222.directed-graphs","id":"uo2hl3yfhn58g5fuzj90q2r","vaultName":"vault"},"value":"ser222.directed-graphs.problems.scheduling","alias":"ser222.directed-graphs.problems.scheduling","position":{"start":{"line":113,"column":3,"offset":3127},"end":{"line":113,"column":49,"offset":3173},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.directed-graphs.problems.scheduling"}},{"type":"wiki","from":{"fname":"ser222.directed-graphs","id":"uo2hl3yfhn58g5fuzj90q2r","vaultName":"vault"},"value":"ser222.directed-graphs.problems.directed-cycle","alias":"ser222.directed-graphs.problems.directed-cycle","position":{"start":{"line":114,"column":3,"offset":3176},"end":{"line":114,"column":53,"offset":3226},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.directed-graphs.problems.directed-cycle"}},{"type":"wiki","from":{"fname":"ser222.directed-graphs","id":"uo2hl3yfhn58g5fuzj90q2r","vaultName":"vault"},"value":"ser222.directed-graphs.topological-sort","alias":"Topological Sorting","position":{"start":{"line":118,"column":1,"offset":3240},"end":{"line":118,"column":64,"offset":3303},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222.directed-graphs.topological-sort"}},{"from":{"fname":"ser222","vaultName":"vault"},"type":"backlink","position":{"start":{"line":68,"column":7,"offset":4202},"end":{"line":68,"column":57,"offset":4252},"indent":[]},"value":"ser222.directed-graphs","alias":"Notes - Directed Graphs"},{"from":{"fname":"ser222.undirected-graphs","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":5,"offset":30},"end":{"line":5,"column":40,"offset":65},"indent":[]},"value":"ser222.directed-graphs","alias":"Directed"},{"from":{"fname":"ser222.weighted-graphs","vaultName":"vault"},"type":"backlink","position":{"start":{"line":40,"column":45,"offset":828},"end":{"line":40,"column":86,"offset":869},"indent":[]},"value":"ser222.directed-graphs","alias":"Directed Graph"}],"anchors":{"terminology":{"type":"header","text":"Terminology","value":"terminology","line":13,"column":0,"depth":2},"directed-graph-adt":{"type":"header","text":"Directed graph ADT","value":"directed-graph-adt","line":20,"column":0,"depth":2},"implementation":{"type":"header","text":"Implementation","value":"implementation","line":33,"column":0,"depth":2},"problems":{"type":"header","text":"Problems","value":"problems","line":116,"column":0,"depth":2},"sorting":{"type":"header","text":"Sorting","value":"sorting","line":122,"column":0,"depth":2}},"children":["gh9iqndaecceqq6ppjhozis","Nyws5WIQjxYCkNd81rtES"],"parent":"TzkCyXooADlBmPWjKo0ds","data":{}},"body":"<h1 id=\"directed-graphs\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#directed-graphs\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Directed Graphs</h1>\n<ul>\n<li>Essentially <a href=\"/notes/notes/7bk68men4djnecox52poe2l\">Undirected Graphs</a>, but with edges that have a clearly defined direction\n<ul>\n<li><img src=\"/notes/assets/images/2022-04-20-10-35-02.png\"></li>\n</ul>\n</li>\n<li>Interestingly, these can be used for things like crafting recipes in games, where materials have to exist in a certain order relative to each other\n<ul>\n<li><img src=\"/notes/assets/images/2022-04-20-11-19-37.png\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"terminology\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#terminology\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Terminology</h2>\n<ul>\n<li><code>V</code> is a <strong>Direct Predecessor</strong> of <code>W</code> if there is a path/edge from <code>V</code> to <code>W</code></li>\n<li><code>V</code> is a <strong>Direct Successor</strong> of <code>W</code> if there is a path/edge from <code>W</code> to <code>V</code></li>\n<li><code>V</code> is a <strong>Predecessor</strong> of <code>W</code> if <code>V</code> is a direct predecessor of <code>W</code> or a predecessor of a direct predecessor of <code>W</code></li>\n<li><code>V</code> is a <strong>Successor</strong> of <code>W</code> if <code>V</code> is a direct successor of <code>W</code> or a successor of a direct successor of <code>W</code></li>\n</ul>\n<h2 id=\"directed-graph-adt\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#directed-graph-adt\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Directed graph ADT</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Diagraph</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of vertices</span>\n    <span class=\"token keyword\">int</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of edges</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// add edge v->w</span>\n    <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// vertices connected to v from edges v->x</span>\n    <span class=\"token class-name\">Digraph</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// reverse of digraph</span>\n    <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string representation of digraph</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"implementation\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#implementation\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Implementation</h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DigraphImplementation</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Digraph</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> adj<span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Initializes an empty digraph with `V` vertices.\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">V</span> the number of vertices\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Digraph</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span></span>V</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span></span>E</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        adj <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> v <span class=\"token operator\">&#x3C;</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span> v<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            adj<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Reads a digraph from an input stream.\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">in</span> the input stream\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Digraph</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">In</span> in<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> <span class=\"token class-name\">E</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> v <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Returns the number of vertices in the digraph.\n     * <span class=\"token keyword\">@return</span> the number of vertices in the digraph\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Returns the number of edges in the digraph.\n     * <span class=\"token keyword\">@return</span> the number of edges in the digraph\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Adds the directed edge v->w to the digraph.\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">v</span> the tail vertex\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">w</span> the head vertex\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        adj<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">E</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Returns the vertices adjacent from vertex `v` in the digraph.\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">v</span> the vertex\n     * <span class=\"token keyword\">@return</span> the vertices adjacent from vertex `v` in the digraph\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">adj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> adj<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Returns the reverse of the digraph.\n     * <span class=\"token keyword\">@return</span> the reverse of the digraph\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Digraph</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Digraph</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DigraphImplementation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> v <span class=\"token operator\">&#x3C;</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span> v<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w <span class=\"token operator\">:</span> <span class=\"token function\">adj</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                r<span class=\"token punctuation\">.</span><span class=\"token function\">addEdge</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"problems\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#problems\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Problems</h2>\n<ul>\n<li><a href=\"/notes/notes/3110043843\">Directed Search</a></li>\n<li><a href=\"/notes/notes/lwdtep1su8a7zxccf6a0eqi\">Scheduling</a></li>\n<li><a href=\"/notes/notes/c040vmtw22mec28ra78pf7i\">Directed Cycle</a></li>\n</ul>\n<h2 id=\"sorting\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sorting\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sorting</h2>\n<p><a href=\"/notes/notes/gh9iqndaecceqq6ppjhozis\">Topological Sorting</a> is a common method to produce ordered graphs.</p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/notes/Nyws5WIQjxYCkNd81rtES\">Problems</a></li>\n<li><a href=\"/notes/notes/gh9iqndaecceqq6ppjhozis\">Topological Sort</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/TzkCyXooADlBmPWjKo0ds\">SER-222</a></li>\n<li><a href=\"/notes/notes/7bk68men4djnecox52poe2l\">Undirected Graphs</a></li>\n<li><a href=\"/notes/notes/w94m4trk054bvxqvseeucg9\">Weighted Graphs</a></li>\n</ul>","noteIndex":{"id":"6YxiIDvTOeKoHyAaqqzY9","title":"Notes","desc":"","updated":1655764869385,"created":1641245237998,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"fc07e211d902512814feeef3187746c9","links":[{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"typescript","alias":"typescript","position":{"start":{"line":4,"column":3,"offset":22},"end":{"line":4,"column":17,"offset":36},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"typescript"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"luau","alias":"luau","position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":11,"offset":47},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"luau"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser222","alias":"SER 222 - Data Structures & Algorithms","position":{"start":{"line":9,"column":3,"offset":67},"end":{"line":9,"column":52,"offset":116},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser222"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"ser216","alias":"SER 216 - \"Software Enterprise\" aka Intro to Software Design","position":{"start":{"line":10,"column":3,"offset":119},"end":{"line":10,"column":74,"offset":190},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"ser216"}},{"type":"wiki","from":{"fname":"root","id":"6YxiIDvTOeKoHyAaqqzY9","vaultName":"vault"},"value":"mat266","alias":"MAT 266 - Calc For Engineers II","position":{"start":{"line":11,"column":3,"offset":193},"end":{"line":11,"column":45,"offset":235},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"mat266"}}],"anchors":{"personal-notes":{"type":"header","text":"Personal Notes","value":"personal-notes","line":8,"column":0,"depth":2},"spring-2022":{"type":"header","text":"Spring 2022","value":"spring-2022","line":13,"column":0,"depth":2}},"children":["fuqi18m0n2cda123o2f3003","cCj8dvgLOLu6CEaNoWdD6","T2ptecH0AHZvseJr1aUvN","TzkCyXooADlBmPWjKo0ds","jwgm1vmw3r5kati1c6uw5pr"],"parent":null,"data":{},"body":"\n## Personal Notes\n\n- [[typescript]]\n- [[luau]]\n\n## Spring 2022\n\n- [[SER 222 - Data Structures & Algorithms|ser222]]\n- [[SER 216 - \"Software Enterprise\" aka Intro to Software Design|ser216]]\n- [[MAT 266 - Calc For Engineers II|mat266]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"James' Class Notes","description":"Fun SWE Stuffs","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteUrl":"https://jheinem1.github.io/notes","assetsPrefix":"/notes","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"enableSmartRefs":true,"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}