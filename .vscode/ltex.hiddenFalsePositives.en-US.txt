{"rule":"AGREEMENT_SENT_START","sentence":"^\\QObjects\nAttributes\nAssociations\nSequence diagrams\nDescribe the dynamic behavior between objects of the system\nState-chart diagrams\nDescribe the dynamic behavior of an individual object\nActivity diagrams\nDescribe the dynamic behavior of a system\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QJavadoc tags\nTags are keywords recognized by Javadoc which define the type of information that follows\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QJavadoc tags\nTags are keywords recognized by Javadoc which define the type of information that follows\nTags come after the description (separated by a new line)\nCommon tags include...\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q$$ ab=ba\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q\\frac{a}{b}\\plusmn\\frac{c}{d}=\\frac{ad\\plusmn bc}{bd}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q\\frac{\\frac{a}{b}}{c}=\\frac{a}{bc}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q\\frac{\\frac{a}{b}}{c}=\\frac{ac}{b}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QEmpirical approach\n![ser222.empirical-analysis]\nAsymptotics\nBounding functions\nAllow for \"noisy\" regions to be ignored\nThe bounds will remain stable until some threshhold is met\nUpper Bounds\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q indicates that \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q has an upper bound\nTo find \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, we take $f(n)4, eliminate all but the dominant term, and remove any constant factor from the dominant term\\E$"}
{"rule":"KNOW_NOW","sentence":"^\\QLess than $750K 6 6 55%\n$750K to $1.5M 12 9 33%\n$1.5M to $3M 25 12 25%\n$3M to $6M 40 18 15%\n$6M to $10M +250 +24 8%\nOver $10M +500 +36 0%\nThis is a problem of scale- current practices do not scale up\nWhy projects fail\nLarge and small projects fail for four reasons\nProject commitments are unrealistic\nThe larger the project, the less influence engineers have\nIf engineers don't have anything to say, nobody will listen\nLarger projects are harder to control\nToday, few developers have personal plans\nWithout plans, you cannot know job status\nIf you don't know where you are, management can't understand job status\nIf management doesn't understand job status, they can't manage projects\nQuality problems get worse at scale\nIf any part has quality problems, the system will have quality problems\nIf developers do not manage quality, their teams cannot manage quality\nWhen unmanaged, quality will always be poor\nTo be effective, teams need leadership and coaching\nLeaders build team motivation and commitment\nCoaching develops team cohesion\nCohesive, motivated, and committed teams do the best work\\E$"}
{"rule":"KNOW_NOW","sentence":"^\\QLess than $750K 6 6 55%\n$750K to $1.5M 12 9 33%\n$1.5M to $3M 25 12 25%\n$3M to $6M 40 18 15%\n$6M to $10M +250 +24 8%\nOver $10M +500 +36 0%\nThis is a problem of scale- current practices do not scale up\nWhy projects fail\nLarge and small projects fail for four reasons\nProject commitments are unrealistic\nThe larger the project, the less influence engineers have\nIf engineers don't have anything to say, nobody will listen\nLarger projects are harder to control\nToday, few developers have personal plans\nWithout plans, you cannot know job status\nIf you don't know where you are, management can't understand job status\nIf management doesn't understand job status, they can't manage projects\nQuality problems get worse at scale\nIf any part has quality problems, the system will have quality problems\nIf developers do not manage quality, their teams cannot manage quality\nWhen unmanaged, quality will always be poor\nTo be effective, teams need leadership and coaching\nLeaders build team motivation and commitment\nCoaching develops team cohesion\nCohesive, motivated, and committed teams do the best work\nPSP Principles\nThe quality of a software system is determined by the quality of its worst components\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QLearning the PSP\nThe PSP is introduced in six upward-compatible steps\nYou write one or more module-sized programs at each step\nYou gather and analyze data on your work\nYou use the results to improve your personal performance\nPSP0: You establish a measured performance baseline.\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QEmpirical approach\n![ser222.empirical-analysis]\nAsymptotics\nBounding functions\nAllow for \"noisy\" regions to be ignored\nThe bounds will remain stable until some threshold is met\nUpper Bounds\nBig-Oh\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q indicates that \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q has an upper bound\nTo find \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, we take \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, eliminate all but the dominant term, and remove any constant factor from the dominant term\nBig-Oh logs\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nLower Bounds\nOmega\nThe opposite of Big-Oh is Omega- a lower bound\nWe write \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to indicate that \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q has a lower bound\nOmega won't be particularly useful\nTight Bounds\nConsider the functions \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nThey almost exactly follow each other for large values of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nTilde\nWe write \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to indicate a function that, when divided by \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, approaches \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q grows, and so we write \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nTheta\nTheta is a more common tight bound\nWe write \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to indicate that \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q is an upper and lower bound represented by the same function\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QThere can be more than two cycles & modules\nProcess scripts\nProcess scripts provide \"expert-level\" guidance on how to use the process\nThey are one or two pages long\nThey describe...\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QPurpose\nEntry criteria\nGeneral guidelines\nSteps\nExit criteria\nPSP Scripts\nPlanning\nEstimate the developmet time\nDevelopment\nDevelop the product using your current methods\nPostmortem\nComplete the project plan summary with the time spent\nDefects found and injected in each phase\nDesign\nDesign the program using your current design methods\nCoding\nImplement the program\nCompile\nCompile until defect-free\nTest\nTest the program and fix all defects\nRecord defects in the defect log and time per phase in the time log\nUsing Process Scripts\nPSP Measures and Forms\\E$"}
